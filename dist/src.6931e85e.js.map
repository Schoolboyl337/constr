{"version":3,"sources":["utils.js","classes/blocks.js","model.js","classes/site.js","classes/sidebar.js","classes/app.js","index.js"],"names":["row","content","styles","col","css","Object","keys","map","key","join","block","type","Block","value","options","Error","titleBlock","tag","imageBlock","iS","imageStyles","alt","textBlock","columnsBlock","html","text","model","background","color","padding","image","display","width","height","Site","selector","$el","document","querySelector","innerHTML","forEach","insertAdjacentHTML","toHTML","Sidebar","updateCallback","update","init","template","addEventListener","add","bind","event","preventDefault","target","name","newBlock","app","site","render","newBlcok","push"],"mappings":"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","file":"src.6931e85e.js","sourceRoot":"..\\src","sourcesContent":["export function row(content,styles = '') {\r\n    return `<div class=\"row\" style=\"${styles}\">${content}</div>`\r\n}\r\nexport function col(content) {\r\n    return `<div class=\"col-sm\">${content}</div>`\r\n}\r\n\r\nexport function css(styles = {}){\r\n  if( typeof styles === 'string') return styles\r\n  const toString = key => `${key}: ${styles[key]}`\r\n  return Object.keys(styles).map(toString).join(';')\r\n}\r\n\r\nexport function block(type) {\r\n  return `\r\n  <form name=\"${type}\">\r\n    <h5>${type}</h5>\r\n    <div class=\"form-group\">\r\n      <input class=\"form-control form-control-sm\" name=\"value\" placeholder=\"value\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <input class=\"form-control form-control-sm\" name=\"styles\" placeholder=\"styles\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary btn-sm\">добавить</button>\r\n    </form>\r\n    <hr />\r\n    `\r\n}"," import{row,col,css} from '../utils'\r\n\r\n class Block{\r\n   constructor(value,options) {\r\n      this.value = value\r\n      this.options = options\r\n   }\r\n   toHTML() {\r\n       throw new Error('Метод toHTML должен быть реализован')\r\n   } \r\n}\r\n\r\nexport class titleBlock extends Block {\r\n    constructor(value,options) {\r\n        super(value,options)\r\n    }\r\n    toHTML() {\r\n        const {tag = 'h1',styles} = this.options\r\n        return row(col(`<${tag}>${this.value}</${tag}>`),css(styles))\r\n    }\r\n}\r\n\r\nexport class imageBlock extends Block {\r\n    constructor(value,options) {\r\n        super(value,options)\r\n    }\r\n    toHTML() {\r\n        const{imageStyles: iS,alt = '',styles} = this.options\r\n        return row(`<img src=\"${this.value}\" alt=\"${alt}\" style=\"${css(iS)}\" />`,css(styles))\r\n    }\r\n}\r\n\r\nexport class textBlock extends Block {\r\n    constructor(value,options) {\r\n        super(value,options)\r\n    }\r\n    toHTML() {\r\n        return row(col(`<p>${this.value}</p>`),css(this.options.styles))\r\n    }\r\n}\r\n\r\nexport class columnsBlock extends Block {\r\n    constructor(value,options) {\r\n        super(value,options)\r\n    }\r\n    toHTML() {\r\n        const html = this.value.map(col).join('')\r\n        return row(html,css(this.options.styles))\r\n    }\r\n}"," import image from './assets/image.png'\r\n import {textBlock,titleBlock,imageBlock,columnsBlock} from './classes/blocks'\r\n const text = `Сюда тоже можно что-то написать,при необходимости,пока что я заглушка`\r\n\r\n export const model = [\r\n    new titleBlock('Конструктор Сайтов на чистом JS', {\r\n        tag:'h3',\r\n        styles: {\r\n            background:'linear-gradient(to right,#ff0099,#493240)',\r\n            color: '#fff',\r\n            padding: '1.5rem',\r\n            'text-align': 'center'\r\n        }\r\n    }),\r\n    new textBlock(text,{\r\n        styles: {\r\n            background: 'linear-gradient(to left,#f2994a,#f2c94c)',\r\n            padding: '1rem',\r\n            'font-weight': 'bold'\r\n        }\r\n    }),\r\n    new columnsBlock ([\r\n        'Чистый JS, без использования библиотек',\r\n        'Работа с Parcel',\r\n        'Что-то ещё,я пока заглушка'\r\n    ],{\r\n        styles: {\r\n            background: 'linear-gradient(to bottom,#8e2de2,#4a00e0)',\r\n            padding: '2rem',\r\n            color: '#fff',\r\n            'font-weight': 'bold'\r\n        }\r\n    }),\r\n    new imageBlock(image,{\r\n        styles: {\r\n            padding: '2rem 0',\r\n            display: 'flex',\r\n            'justify-content': 'center'\r\n        },\r\n        imageStyles: {\r\n            width: '500px',\r\n            height: 'auto'\r\n        },\r\n        alt: 'Утка'\r\n    })\r\n]","export class Site {\r\n    constructor(selector) {\r\n        this.$el = document.querySelector(selector)\r\n    }\r\n\r\nrender(model) {\r\n    this.$el.innerHTML = ''\r\n    model.forEach(block => { \r\n    this.$el.insertAdjacentHTML('beforeend',block.toHTML())\r\n})\r\n}\r\n}","import {block} from '../utils'\r\nimport { textBlock,titleBlock } from './blocks'\r\nexport class Sidebar{\r\n    constructor(selector, updateCallback) {\r\n        this.$el = document.querySelector(selector)\r\n        this.update = updateCallback\r\n\r\n        this.init()\r\n    }\r\n\r\n    init() {\r\n        this.$el.insertAdjacentHTML('afterbegin',this.template)\r\n        this.$el.addEventListener('submit',this.add.bind(this))\r\n    }\r\n\r\n    get template() {\r\n        return[ \r\n          block('text'),\r\n          block('title')\r\n        ].join('')\r\n    }\r\n\r\nadd(event) {\r\n    event.preventDefault()\r\n\r\n    const type = event.target.name\r\n    const value = event.target.value.value\r\n    const styles = event.target.styles.value\r\n\r\n    const newBlock = type === 'text' \r\n    ?  new textBlock(value,{styles})\r\n    :  new titleBlock(value,{styles})\r\n\r\n    this.update(newBlock)\r\n\r\n    event.target.value.value = ''\r\n    event.target.styles.value = ''\r\n  }\r\n}","import {Site} from './site'\r\nimport { Sidebar } from './sidebar'\r\nexport class app {\r\n    constructor (model) {\r\n        this.model = model\r\n    }\r\n\r\n    init() {\r\n        const site = new Site('#site')\r\n\r\n        site.render(this.model)\r\n        \r\n        const updateCallback = newBlcok => {\r\n            this.model.push(newBlcok)\r\n            site.render(this.model)\r\n        }\r\n        \r\n        new Sidebar('#panel', updateCallback)  \r\n    }\r\n}","import {model} from './model'\r\nimport {app} from './classes/app'\r\nimport './styles/main.css'\r\n\r\nnew app(model).init()\r\n"]}